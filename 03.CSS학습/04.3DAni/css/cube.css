@charset "utf-8";
/* 큐브 애니 CSS - cube.css */

html, body{
    margin: 0;
    padding: 0;
    height: 100%;
    /* 보이는 화면 기준 채우기 */
}

/* 전체 배경 */
body{
    background-image: linear-gradient(to bottom, #777 30%, rgb(48, 18, 18) 70%);
}

/* 큐브 */
.cube{
    /* 앱솔루트 포지션 - 가운데로 위치 */
    position: absolute;
    top: calc(50% - 150px);
    left:  calc(50% - 150px);
    width: 300px;
    height: 300px;

    /* 
        [ 입체로 설정하기 ]
        - 입체로 설정할 요소의 부모 박스에 아래와 같이 설정해 준다
        transform-style: preserve-3d;
        - 기본값 flat, 즉 2D
        - preserve-3d는 3D 전환 설정
    */
    transform-style: preserve-3d;
    /* 입체를 잘보이게 하기 위해 약간 회전 */
    transform: rotateX(10deg) rotateY(30deg);
}

/* 큐브각면 공통 */
.cube span{
    /* 부모는 .cube */
    position: absolute;
    /* 앱솔루트는 자동 block 변경 */
    width: 100%;
    height: 100%;
    opacity: 0.8;
    outline: 1px solid black;
}

.cube span:nth-child(1){
    background: url(../images/newyorkCity.jpg) no-repeat right/auto 105%;

    /* 화면 기준 z축 위치 이동 */
    transform: translateZ(150px);
}

.cube span:nth-child(2){
    background: url(../images/seoulCity.jpg) no-repeat center/cover;
    /* y축 회전을 하고 이미지 기준 z축 위치 이동 */
    transform: rotateY(90deg) translateZ(150px);
}

.cube span:nth-child(3){
    background: url(../images/parisCity.jpg) no-repeat center/cover;
    transform: rotateY(180deg) translateZ(150px);
}

.cube span:nth-child(4){
    background: url(../images/cityMain.jpg) no-repeat center/cover;
    transform: rotateY(-90deg) translateZ(150px);
}

.cube span:nth-child(5){
    background: url(../images/citys.jpg) no-repeat center/cover;
    transform: rotateX(90deg) translateZ(150px);
}

.cube span:nth-child(6){
    background: url(../images/London_city.jpg) no-repeat center/cover;
    transform: rotateX(-90deg) translateZ(150px);
}

/* 버튼 박스 */
.btns{
    text-align: center;
    padding: 50px;
}

.btns button{
    font-size: 40px;
    border-radius: 10px;
}

/* 애니메이션 호출 클래스 */
.cube-ani{
    animation: cubeAni 4s linear infinite;
    /* 처음에는 멈춰있기 */
    animation-play-state: paused;
}

/* 애니메이션 플레이 클래스 */
.cube-ani.on{
    animation-play-state: running;
}

/* 큐브회전 키프레임 */
@keyframes cubeAni {
    to{
        transform: rotateX(370deg) rotateY(-330deg);
    }
}